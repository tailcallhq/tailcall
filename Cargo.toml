[package]
name = "tailcall"
version = "0.1.0"
edition = "2021"

[[bin]]
name = "tailcall"
path = "src/main.rs"

[workspace.dependencies]
anyhow = "1.0.82"
async-graphql = { version = "7.0.9" }
futures-util = { version = "0.3.30" }
indexmap = "2.2.6"
headers = "0.4.0" # previous version until hyper is updated to 1+
http = "0.2.12" # previous version until hyper is updated to 1+
insta = { version = "1.38.0", features = ["json"] }
tokio = { version = "1.37.0", features = ["rt", "time"] }
reqwest = { version = "0.11", features = [
    "json",
    "rustls-tls",
], default-features = false }
tracing = "0.1.40"
lazy_static = "1.4.0"
serde_json = { version = "1.0.116", features = ["preserve_order"] }
serde = { version = "1.0.200", features = ["derive"] }
derive_more = { version = "1", features = ["from", "debug"] }
thiserror = "1.0.59"
url = { version = "2.5.0", features = ["serde"] }
convert_case = "0.6.0"
tailcall-valid = "0.1.1"

[dependencies]
# dependencies specific to CLI must have optional = true and the dep should be added to default feature.
# one needs to add default feature tag if it is something IO related or might conflict with WASM

mimalloc = { version = "0.1.41", default-features = false, optional = true }
http-cache-reqwest = { version = "0.13.0", features = [
    "manager-moka",
], default-features = false, optional = true }
moka = { version = "0.12.7", default-features = false, features = [
    "future",
], optional = true }
hyper-rustls = { version = "0.25.0", optional = true }
rustls = { version = "0.23.5", optional = true, features = [
    "std",
], default-features = false }
rustls-pki-types = "1.5.0"
inquire = { version = "0.7.5", optional = true }
opentelemetry-otlp = { version = "0.16.0", features = [
    "trace",
    "logs",
    "metrics",
    # required to make grpc requests
    "tls-roots",
], optional = true }
opentelemetry-system-metrics = { version = "0.2.0", optional = true }
tailcall-http-cache = { path = "tailcall-http-cache", optional = true }
tailcall-version = { path = "./tailcall-version", optional = true }
genai = { git = "https://github.com/laststylebender14/rust-genai.git", rev = "63a542ce20132503c520f4e07108e0d768f243c3", optional = true }
ctrlc = { version = "3.4.5", optional = true }

# dependencies safe for wasm:

rustls-pemfile = { version = "1.0.4" }
schemars = { version = "0.8.17", features = ["derive"] }
hyper = { version = "0.14.28", features = ["server"], default-features = false }
tokio = { workspace = true }
anyhow = { workspace = true }
reqwest = { workspace = true }
derive_setters = "0.1.6"
derive-getters = "0.5.0"
thiserror = { workspace = true }
serde_json = { workspace = true }
serde = { workspace = true }
serde_qs = "0.13"
serde_yaml_ng = "0.10.0"
serde_urlencoded = "0.7.1"
url = { workspace = true }
indexmap = { workspace = true }
once_cell = "1.19.0"
clap = { version = "4.5.4", features = ["derive"] }
colored = "2.1.0"
regex = "1.10.4"
reqwest-middleware = "0.2.5"
async-trait = "0.1.80"
serde_path_to_error = "0.1.16"
cache_control = "0.2.0"
nom = "7.1.3"
exitcode = "1.1.2"
resource = "0.5.0"
num_cpus = "1.16.0"
fnv = "1.0.7"
futures-channel = { version = "0.3.30" }
futures-timer = { version = "3.0.3", features = ["wasm-bindgen"] }
futures-util = { workspace = true }
lru = { version = "0.12.3" }
async-std = { version = "1.12.0", features = [
    "wasm-bindgen-futures",
    "unstable",
] }
ttl_cache = "0.5.1"
protox = "0.7.0"
protox-parse = "0.7.0"
prost-reflect = { version = "0.14.0", features = ["serde"] }
prost = "0.13.1"
update-informer = { version = "1.1.0", default-features = false, features = [
    "github",
    "reqwest",
], optional = true }
lazy_static = { workspace = true }
which = { version = "7.0.0", optional = true }
async-recursion = "1.1.1"
rquickjs = { "version" = "0.7.0", optional = true, features = ["macro"] }
strum_macros = "0.26.4"
# TODO: disable some levels with features?
tracing = { workspace = true }
tracing-subscriber = { version = "0.3.18", features = [
    "default",
    "fmt",
    "env-filter",
] }
tracing-opentelemetry = "0.24.0"
getrandom = { version = "0.2.14", features = ["js"] }
prometheus = "0.13.4"
tonic = { version = "0.11.0", default-features = false }
opentelemetry-semantic-conventions = "0.15.0"
opentelemetry = { version = "0.23.0", features = ["trace", "logs", "metrics"] }
opentelemetry_sdk = { version = "0.23.0", features = [
    "trace",
    "logs",
    "metrics",
] }
opentelemetry-http = "0.12.0"
opentelemetry-stdout = { version = "0.4.0", features = [
    "trace",
    "logs",
    "metrics",
] }
opentelemetry-appender-tracing = { version = "0.4.0" }
opentelemetry-prometheus = "0.16.0"
phonenumber = "0.3.4"
chrono = "0.4.38"
async-graphql-extension-apollo-tracing = { version = "3.2.15" }
headers = { workspace = true }
http = { workspace = true }
mime = "0.3.17"
htpasswd-verify = { version = "0.3.0", git = "https://github.com/twistedfall/htpasswd-verify", rev = "ff14703083cbd639f7d05622b398926f3e718d61" } # fork version that is wasm compatible
jsonwebtoken = "9.3.0"
async-graphql-value = "7.0.9"
async-graphql = { workspace = true, features = [
    "dynamic-schema",
    "dataloader",
    "apollo_tracing",
    "opentelemetry",
] }
dotenvy = "0.15.7"
convert_case = { workspace = true }
rand = "0.8.5"
tailcall-macros = { path = "tailcall-macros" }
tailcall-tracker = { path = "tailcall-tracker", optional = true }
tailcall-typedefs-common = { path = "./tailcall-typedefs-common" }
tonic-types = "0.12.1"
base64 = "0.22.1"
tailcall-hasher = { path = "tailcall-hasher" }
serde_json_borrow = { version = "0.7.1", default-features = false }
pluralizer = "0.4.0"
path-clean = "=1.0.1"
pathdiff = "0.2.1"
num = "0.4.3"
indenter = "0.3.3"
derive_more = { workspace = true }
strum = "0.26.2"
tailcall-valid = { workspace = true }
dashmap = "6.1.0"
urlencoding = "2.1.3"
tailcall-chunk = "0.3.0"
unicode-segmentation = "1.12.0"

# to build rquickjs bindings on systems without builtin bindings
[target.'cfg(all(target_os = "windows", target_arch = "x86"))'.dependencies]
rquickjs = { "version" = "0.7.0", optional = true, features = ["macro", "bindgen"] }

[dev-dependencies]
datatest-stable = "0.2.9"
tokio-test = "0.4.4"
tailcall-prettier = { path = "tailcall-prettier" }
criterion = "0.5.1"
httpmock = "0.7.0"
pretty_assertions = "1.4.0"
stripmargin = "0.1.1"
markdown = "1.0.0-alpha.17"
insta = { workspace = true }
tempfile = "3.10.1"
maplit = "1.0.2"
tailcall-fixtures = { path = "./tailcall-fixtures" }
http-cache-semantics = { version = "1.0.1", default-features = false, features = [
    "with_serde",
    "reqwest",
] }
cacache = { version = "13.0.0", default-features = false, features = [
    "tokio-runtime",
    "mmap",
] }
test-log = { version = "0.2.16", default-features = false, features = [
    "color",
    "trace",
] }
flate2 = "1.0.30"
bincode = "1.3.3"

[features]

# Feature Flag to enable V8.
# V8 currently is not support on all platforms so, we control it via this feature flag.
js = ["dep:rquickjs"]

# Feature Flag to core CLI features.
# This is created to control what we expose for WASM.
# Will be deprecated once we move CLI to it's own crate and WASM builds won't depend on it.
cli = [
    "tokio/fs",
    "tokio/rt-multi-thread",
    "dep:mimalloc",
    "dep:http-cache-reqwest",
    "dep:moka",
    "dep:hyper-rustls",
    "dep:rustls",
    "dep:inquire",
    "dep:which",
    "dep:update-informer",
    "opentelemetry_sdk/testing",
    "opentelemetry_sdk/rt-tokio",
    "dep:opentelemetry-otlp",
    "dep:opentelemetry-system-metrics",
    "dep:tailcall-tracker",
    "dep:tailcall-http-cache",
    "dep:tailcall-version",
    "dep:genai",
    "dep:ctrlc",
]

# Feature flag to enable all default features.
# This is used by default locally while developing and on CI.
# We generally want to interface via CLI and have V8 enabled, while running tests.
default = ["cli", "js"]

# Feature flag to force JIT engine inside integration tests
force_jit = []

[workspace]
members = [
    ".",
    "tailcall-typedefs-common",
    "tailcall-typedefs",
    "tailcall-aws-lambda",
    "tailcall-cloudflare",
    "tailcall-macros",
    "tailcall-prettier",
    "tailcall-fixtures",
    "tailcall-upstream-grpc",
    "tailcall-tracker",
    "tailcall-wasm",
    "tailcall-hasher",
    "tailcall-http-cache",
    "tailcall-version",
]

# Boost execution_spec snapshot diffing performance
[profile.dev.package]
insta.opt-level = 3
similar.opt-level = 3

[profile.release]
opt-level = 3
codegen-units = 1
panic = 'abort'
lto = 'fat'
debug = false
incremental = false
overflow-checks = false

[profile.benchmark]
inherits = "release"
debug = true

[profile.release.package.tailcall-cloudflare]
strip = true
codegen-units = 1
opt-level = 'z'

[[bench]]
name = "tailcall_benches"
harness = false

[[test]]
name = "execution_spec"
harness = false

[[test]]
name = "cli_spec"
path = "tests/cli/gen.rs"
harness = false

[[test]]
name = "json_to_config_spec"
path = "src/core/generator/tests/json_to_config_spec.rs"
harness = false
